name: Build Pet Clinic App
on:
  push:
    branches:
    - main
jobs:
    build-unittest-codeverage:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
            java-version: '11'
            distribution: 'adopt'

      - name: Build
        run: ./mvnw package

      - name: Unit Test
        run: ./mvnw test
      
      - name: Sonar-cache packages
        uses: actions/cache@v1
        with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

      - name: Codecoverage
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      
      - run: ls -la

      - name: Publish to artifactory
        uses: advancedcsg-open/action-jfrog-cli@master
        with:
          url: 'https://sixartifacts.jfrog.io/artifactory/petclinic'
          credentials type: 'apikey'
          apikey: ${{ secrets.JFROG_APIKEY }}
          args: u "./target/*.jar" petclinic 
          
    deploy-integration-env:
      runs-on: ubuntu-latest
      needs: build-unittest-codeverage
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUB }}
        ARM_TENANT_ID: ${{ secrets.AZ_TENANT }}
        ARM_CLIENT_ID: ${{ secrets.AZ_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZ_SECRET }}
      steps:
      - uses: hashicorp/setup-terraform@v1
      - name: Clone Terraform Repo
        id: clone-ops
        uses: actions/checkout@v2        
        with:
          repository: 'rattisyam/iaac'
          ref: 'main'
          token: ${{ secrets.GITOPS_TOKEN }}

      - name: Execute Terraform Templates     
        run: |
          cd ./integration;
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve
    
    run-integration-test:
      runs-on: private-windows
      needs: deploy-integration-env
      steps:
      - name: Clone Selenium Tests
        id: clone-ops
        uses: actions/checkout@v2
        with:
          repository: 'rattisyam/spring-petclinic-selenium'
          ref: 'main'
          token: ${{ secrets.GITOPS_TOKEN }}

      - name: download artifact
        run: jfrog rt dl "petclinic/petclinic/*.jar"  --url https://sixartifacts.jfrog.io/artifactory --apikey ${{ secrets.JFROG_APIKEY }}

      - name: Deploy petclinic and test
        shell: powershell
        run: $file=Get-ChildItem -Path .\petclinic\ | select name -ExpandProperty Name;
            javaw -jar .\petclinic\$file;
            .\mvnw clean install;

    destroy-integration-env:
        runs-on: ubuntu-latest
        needs: [deploy-integration-env,run-integration-test]
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUB }}
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT }}
          ARM_CLIENT_ID: ${{ secrets.AZ_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZ_SECRET }}
        steps:
        - uses: hashicorp/setup-terraform@v1
        - name: Clone Terraform Repo
          id: clone-ops
          uses: actions/checkout@v2        
          with:
            repository: 'rattisyam/iaac'
            ref: 'main'
            token: ${{ secrets.GITOPS_TOKEN }}
        - name: Tear Down Integration Env    
          run: |
            cd ./integration;
            terraform init
            terraform validate
            terraform destroy -auto-approve

        
      
     
        




